let g:netrw_banner = 0

syntax enable
set encoding=utf-8
set tags=./tags,tags,./.git/tags;$HOME
set clipboard=unnamed
set mouse=a
set hlsearch
set incsearch
set ignorecase smartcase
set autoread
set noeb vb t_vb=
set number
set numberwidth=5
set diffopt=vertical
set signcolumn=no
:set updatetime=1000
set complete=.,w,b,u,t,i
:set completeopt=menu,preview
set diffopt=vertical
set signcolumn=no
:set updatetime=1000
set complete=.,w,b,u,t,i
:set completeopt=menu,preview
set nofoldenable
set foldmethod=manual
set nojoinspaces
set wildmode=list:longest,list:full
set wildmenu
set scrolloff=10
set sidescrolloff=5

" statusline
:set statusline=%<%f\ (%{&ft})\ %-4(%m%)%=%-19(%3l,%02c%03V%)

if has("autocmd")
  filetype indent plugin on
  " json
  autocmd! FileType json set sw=2 sts=2 expandtab

  " elm indentation
  autocmd! FileType elm set sw=4 sts=4 expandtab autoindent smartindent nocindent

  " Remove whitespace at end of lines
  autocmd BufWritePre *.erb,*.scss,*.rb,*.js,*.c,*.py,*.php,*.coffee :%s/\s\+$//e
endif

" Enable matchit for better navigating
runtime macros/matchit.vim

" use C-Space to Esc any mode
nnoremap <C-Space> <Esc>:noh<CR>
vnoremap <C-Space> <Esc>gV
onoremap <C-Space> <Esc>
cnoremap <C-Space> <C-c>
inoremap <C-Space> <Esc>
" terminal sees <C-@> as <C-space>
nnoremap <C-@> <Esc>:noh<CR>
vnoremap <C-@> <Esc>gV
onoremap <C-@> <Esc>
cnoremap <C-@> <C-c>
inoremap <C-@> <Esc>

" convenience
nnoremap <leader>; :

" move between wrapped lines
nmap j gj
nmap k gk

" User VTR for vim-test
nnoremap <leader>ap :VtrAttachToPane 2<cr>
let test#strategy = 'vtr'
let g:test#javascript#jest#options = '--reporters jest-vim-reporter'

" lint erb correctly
call ale#linter#Define('eruby', {
 \   'name': 'erubylint',
 \   'executable': 'erb',
 \   'output_stream': 'stderr',
 \   'command': "ruby -rerb -e \"puts ERB.new(File.read(%t, encoding: 'BINARY').gsub('<%=','<%'), nil, '-').src\" | ruby -c",
 \   'callback': 'ale#handlers#ruby#HandleSyntaxErrors',
 \})

" fzf
nnoremap <c-p> :Files<cr>
nnoremap <leader>gp :Buffers<CR>
nnoremap <leader>ga :Files app/<cr>
nnoremap <leader>gm :Files app/models/<cr>
nnoremap <leader>gv :Files app/views/<cr>
nnoremap <leader>gc :Files app/controllers/<cr>
nnoremap <leader>gy :Files app/assets/stylesheets/<cr>
nnoremap <leader>gj :Files app/assets/javascripts/<cr>
nnoremap <leader>gs :Files spec/<cr>

" ripgrep
nnoremap \ :Rg<space>
command! -bang -nargs=* Rg
  \ call fzf#vim#grep(
  \   'rg --column --line-number --hidden --ignore-case --no-heading --color=always '.shellescape(<q-args>), 1,
  \   <bang>0 ? fzf#vim#with_preview({'options': '--delimiter : --nth 4..'}, 'up:60%')
  \           : fzf#vim#with_preview({'options': '--delimiter : --nth 4..'}, 'right:50%:hidden', '?'),
\ <bang>0)

nnoremap <leader>sub :%s///g<left><left>
vnoremap <leader>sub :s///g<left><left>

set background=dark
colorscheme jellybeans
" highlight ColorColumn ctermbg=238
" hi Comment ctermfg=246
" hi SpellBad ctermbg=52
